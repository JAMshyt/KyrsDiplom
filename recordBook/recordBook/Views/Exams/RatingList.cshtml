@using System.Security.Claims;
@using recordBook.Models
@using recordBook.Models.ViewModels

@model ExamsViewModel
@{
	@if (User.IsInRole("Student"))
	{
		ViewData["Title"] = "Ваши рейтинги, " + User.FindFirst(ClaimTypes.Surname)?.Value + " " + User.FindFirst(ClaimTypes.Name)?.Value;
	}
	else if (User.IsInRole("Adm"))
	{
		ViewData["Title"] = "Рейтинги группы " + Model.selectedGroup.Name_group;
	}
	else
	{
		ViewData["Title"] = "Рейтинги вашей группы (" + Model.selectedGroup.Name_group + ")";
	}
}

<h1>@ViewData["Title"]</h1>


@if (User.IsInRole("Adm"))
{
	<form asp-controller="Exams" asp-action="RatingList">
		<select name="selectedGroup" required onchange="this.form.submit()" style="width:120px; height:40px; text-align:center">
			@foreach (var groups in Model.Groups)
			{
				if (groups.ID_Group == Model.selectedGroup.ID_Group)
				{
					<option value="@groups.ID_Group" selected>@groups.Name_group</option>
				}
				else
				{
					<option value="@groups.ID_Group">@groups.Name_group</option>
				}
			}
		</select>


		<select name="selectedSubject" required onchange="this.form.submit()" style="width:200px; height:40px; text-align:center">
			@foreach (var subj in Model.Subjects)
			{
				if (Model.Group_Subjects.Where(y => y.ID_Group == Model.selectedGroup.ID_Group).Select(z => z.ID_Subject).Contains(subj.ID_Subject))
				{
					if (subj.ID_Subject == Model.selectedSubject.ID_Subject)
					{
						<option value="@subj.ID_Subject" selected>@subj.Name_subject</option>
					}
					else
					{
						<option value="@subj.ID_Subject">@subj.Name_subject</option>
					}
				}
			}
		</select>

		@{
			var maxSemester = Model.RatingControls
			.Where(q => q.ID_Student == Model.Students.FirstOrDefault(q => q.ID_Group == Model.selectedGroup.ID_Group).ID_Student)
			.Select(q => q.Semester)
			.Distinct()
			.OrderByDescending(s => s);
		}
		<br><br>
		<p id="tt">
			Семестр
			<select name="selectedSemester" required onchange="this.form.submit()" style="width:50px; height:40px; text-align:center">
				@foreach (var sem in maxSemester)
				{
					if (sem == Model.selectedSemester)
					{
						<option value="@sem" selected>@sem</option>
					}
					else
					{
						<option value="@sem">@sem</option>
					}
				}
			</select>

			<button type="button" id="ChangePoints" class="btn btn-warning">Изменить баллы</button>
		</p>

	</form>


	<table class="table" id="myTable" style="width:95%">

		<thead>
			<tr>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:justify;">Студент</h6>
				</th>

				@{
					var CountRait = Model.RatingControls
					.Where(q => q.ID_Student == Model.Students.FirstOrDefault(q => q.ID_Group == Model.selectedGroup.ID_Group).ID_Student)
					.Select(q => q.RatingNumber)
					.Distinct()
					.OrderBy(s => s);

					if (CountRait.Count() == 5)
					{
						foreach (var r in CountRait)
						{
							if (r == 4)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Посещаемость</h6>
								</th>
							}
							else if (r == 5)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Доп. баллы</h6>
								</th>
							}
							else
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Рейтинг№@r</h6>
								</th>
							}
						}

					}
					else if (CountRait.Count() == 4)
					{

						foreach (var r in CountRait)
						{
							if (r == 3)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Посещаемость</h6>
								</th>
							}
							else if (r == 4)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Доп. баллы</h6>
								</th>
							}
							else
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Рейтинг№@r</h6>
								</th>
							}
						}
					}
					else
					{
						foreach (var r in CountRait)
						{
							<th id="tableLabel">
								<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Рейтинг№@r</h6>
							</th>
						}
					}
					<th id="tableLabel">
						<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Итог</h6>
					</th>
				}

			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.Students.Where(z => z.ID_Group == Model.selectedGroup.ID_Group))
			{



				<tr id="columnGrade">

					<td style="text-align:justify; font-weight: bold">
						<p id="label_s">@item.Surname  @item.Name  @item.Patronymic</p>
					</td>
					@{
						int end = 0;
					}

					@if (Model.RatingControls.FirstOrDefault(q => q.ID_Student == item.ID_Student) != null)
					{
						@for (int i = 1; i <= CountRait.Count(); i++)
						{

							bool emptyRat = true;

							<td id="cellPoint" style="text-align:center;  padding-right:10%; font-weight: bold ">
								@foreach (var r in Model.RatingControls.Where(q => q.ID_Student == item.ID_Student &&
													q.ID_Subject == Model.selectedSubject.ID_Subject &&
													q.Semester == Model.selectedSemester &&
													q.RatingNumber == @i))
								{
									end += @r.Points;
									<p class="labelsGrade">@r.Points</p>
									<input type="tel" class="enterPoints" onchange="newPoint(@r.ID_RatingControl,event)" style="max-width:100px; width:200%; height:30px; text-align:center">
									emptyRat = false;
								}
								@if (emptyRat)
								{
									<input type="tel" class="enterPoints" onchange="newRating(@item.ID_Student,@Model.selectedSubject.ID_Subject,@Model.selectedSemester,@i,event)" style="max-width:100px;  width:200%;  height:30px; text-align:center">
								}

							</td>
						}
					}
					else
					{
						for (int i = 1; i <= CountRait.Count(); i++)
						{
							<td id="cellPoint" style="text-align:justify;  padding-right:10%; font-weight: bold ">
								<input type="tel" class="enterPoints" onchange="newRating(@item.ID_Student,@Model.selectedSubject.ID_Subject,@Model.selectedSemester,@i,event)" style="max-width:100px; width:200%; height:30px; text-align:center">
							</td>
						}
					}
					<td style="text-align:justify; font-weight: bold">
						<p id="label_s">@end</p>
					</td>
				</tr>

			}
		</tbody>
	</table>
}
else if (User.IsInRole("Student"))
{
	<form asp-controller="Exams" asp-action="RatingList">

		@{
			var maxSemester = Model.RatingControls
			.Where(q => q.ID_Student == Model.Students.FirstOrDefault(q => q.ID_Group == Model.selectedGroup.ID_Group).ID_Student)
			.Select(q => q.Semester)
			.Distinct()
			.OrderByDescending(s => s);
		}
		<br><br>
		<p id="tt">
			Семестр
			<select name="selectedSemester" required onchange="this.form.submit()" style="width:50px; height:40px; text-align:center">
				@foreach (var sem in maxSemester)
				{
					if (sem == Model.selectedSemester)
					{
						<option value="@sem" selected>@sem</option>
					}
					else
					{
						<option value="@sem">@sem</option>
					}
				}
			</select>
		</p>

	</form>


	<table class="table" id="myTable" style="width:95%">

		<thead>
			<tr>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:justify;">Дисциплина</h6>
				</th>

				@{
					var CountSemester = Model.RatingControls
					.Where(q => q.ID_Student == Model.Students.FirstOrDefault(q => q.ID_Group == Model.selectedGroup.ID_Group).ID_Student)
					.Select(q => q.RatingNumber)
					.Distinct()
					.OrderBy(s => s);
					if (CountSemester.Count() == 5)
					{
						foreach (var r in CountSemester)
						{
							if (r == 4)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Посещаемость</h6>
								</th>
							}
							else if (r == 5)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Доп. баллы</h6>
								</th>
							}
							else
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Рейтинг№@r</h6>
								</th>
							}
						}

					}
					else if (CountSemester.Count() == 4)
					{

						foreach (var r in CountSemester)
						{
							if (r == 3)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Посещаемость</h6>
								</th>
							}
							else if (r == 4)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Доп. баллы</h6>
								</th>
							}
							else
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Рейтинг№@r</h6>
								</th>
							}
						}
					}
					else
					{
						foreach (var r in CountSemester)
						{
							<th id="tableLabel">
								<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Рейтинг№@r</h6>
							</th>
						}
					}
					<th id="tableLabel">
						<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Итог</h6>
					</th>
				}

			</tr>
		</thead>
		<tbody>
			@foreach (var f in Model.Group_Subjects)
			{
				@foreach (var item in Model.Subjects.Where(z => z.ID_Subject == f.ID_Subject))
				{

					<tr id="columnGrade">

						<td style="text-align:justify; font-weight: bold">
							<p id="label_s">@item.Name_subject</p>
						</td>

						@{
							int end = 0;
						}

						@foreach (var r in Model.RatingControls.Where(q => q.ID_Subject == item.ID_Subject &&
								q.Semester == Model.selectedSemester))
						{
							end += @r.Points;
							<td id="cellPoint" style="text-align:center;  padding-right:10%; font-weight: bold ">
								<p class="labelsGrade">@r.Points</p>
							</td>

						}

						<td style="text-align:justify; font-weight: bold">
							<p id="label_s">@end</p>
						</td>

					</tr>
				}
			}
		</tbody>
	</table>
}
else
{
	<form asp-controller="Exams" asp-action="RatingList">
		<select name="selectedGroup" required onchange="this.form.submit()" style="width:120px; height:40px; text-align:center">

			@foreach (var groups in Model.Groups)
			{
				if (groups.ID_Group == Model.selectedGroup.ID_Group)
				{
					<option value="@groups.ID_Group" selected>@groups.Name_group</option>
				}
				else
				{
					<option value="@groups.ID_Group">@groups.Name_group</option>
				}
			}
		</select>

		<select name="selectedSubject" required onchange="this.form.submit()" style="width:200px; height:40px; text-align:center">
			@foreach (var sub in Model.Subjects)
			{
				if (Model.Group_Subjects.Where(y => y.ID_Group == Model.selectedGroup.ID_Group).Select(z => z.ID_Subject).Contains(sub.ID_Subject))
				{
					if (sub.ID_Subject == Model.selectedSubject.ID_Subject)
					{
						<option value="@sub.ID_Subject" selected>@sub.Name_subject</option>
					}
					else
					{
						<option value="@sub.ID_Subject">@sub.Name_subject</option>
					}
				}
			}
		</select>

		@{
			var maxSemester = Model.RatingControls?
			.Where(q => q.ID_Student == Model.Students.FirstOrDefault(q => q.ID_Group == Model.selectedGroup?.ID_Group)?.ID_Student)
			.Select(q => q.Semester)
			.Distinct()
			.OrderByDescending(s => s);
		}
		<br><br>
		<p id="tt">
			Семестр
			<select name="selectedSemester" required onchange="this.form.submit()" style="width:50px; height:40px; text-align:center">
				@foreach (var sem in maxSemester)
				{
					if (sem == Model.selectedSemester)
					{
						<option value="@sem" selected>@sem</option>
					}
					else
					{
						<option value="@sem">@sem</option>
					}
				}
			</select>
		</p>

	</form>


	<table class="table" id="CuratorTable" style="width:95%">

		<thead>
			<tr>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:justify;">Студент</h6>
				</th>

				@{
					var CountSemester = Model.RatingControls?
					.Where(q => q.ID_Student == Model.Students.FirstOrDefault(q => q.ID_Group == Model.selectedGroup.ID_Group)?.ID_Student)
					.Select(q => q.RatingNumber)
					.Distinct()
					.OrderBy(s => s);

					if (CountSemester.Count() == 5)
					{
						foreach (var r in CountSemester)
						{
							if (r == 4)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Посещаемость</h6>
								</th>
							}
							else if (r == 5)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Доп. баллы</h6>
								</th>
							}
							else
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Рейтинг№@r</h6>
								</th>
							}
						}

					}
					else if (CountSemester.Count() == 4)
					{

						foreach (var r in CountSemester)
						{
							if (r == 3)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Посещаемость</h6>
								</th>
							}
							else if (r == 4)
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Доп. баллы</h6>
								</th>
							}
							else
							{
								<th id="tableLabel">
									<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Рейтинг№@r</h6>
								</th>
							}
						}
					}
					else
					{
						foreach (var r in CountSemester)
						{
							<th id="tableLabel">
								<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Рейтинг№@r</h6>
							</th>
						}
						<th id="tableLabel">
							<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Посещаемость</h6>
						</th>
					}
					<th id="tableLabel">
						<h6 style="margin-bottom : 0px; text-align:justify; display:inline">Итог</h6>
					</th>
				}

			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.Students.Where(z => z.ID_Group == Model.selectedGroup.ID_Group))
			{

				<tr id="columnGrade">

					<td style="text-align:justify; font-weight: bold">
						<p id="label_s">@item.Surname  @item.Name  @item.Patronymic</p>
					</td>

					@{
						int end = 0;
					}

					@foreach (var r in Model.RatingControls.Where(q => q.ID_Student == item.ID_Student &&
							q.ID_Subject == Model.selectedSubject.ID_Subject &&
							q.Semester == Model.selectedSemester))
					{
						<td id="cellPoint" style="text-align:center;  padding-right:10%; font-weight: bold ">
							<p class="labelsGrade">@r.Points</p>
						</td>
						end += @r.Points;

					}


					<td style="text-align:justify; font-weight: bold">
						<p id="label_s">@end</p>
					</td>

				</tr>

			}
		</tbody>
	</table>
	string group = Model.selectedGroup.Name_group;
	string subj = Model.selectedSubject.Name_subject;

	<button id="exportButton" class="btn btn-info" onclick="exportToExcel('@group','@subj')">Сохранить в Excel</button>
}




<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/exceljs/dist/exceljs.min.js"></script>

<script type='text/javascript'>
	$(document).ready(function () {
		$('.enterPoints').hide();
	});

	$('#ChangePoints').click(function () {
		if ($('#ChangePoints').text() == 'Изменить баллы') {
			$('.enterPoints').show();
			$('#ChangePoints').text('Сохранить');
		}
		else {
			$('.enterPoints').hide();
			$('#ChangePoints').text('Изменить баллы');
			location.reload()
		}

	});

	function newPoint(id, event) {
		var points = event.target.value;
		$.ajax({
			type: 'POST',
			url: '/Exams/ChangePoints/',
			contentType: 'application/json',
			data: JSON.stringify({ Id: id, newPoints: points }),
			dataType: 'json',
		});
	}


	function newRating(idStudent, idSubj, semester, rating, event) {
		var points = event.target.value;
		$.ajax({
			type: 'POST',
			url: '/Exams/NewRating/',
			contentType: 'application/json',
			data: JSON.stringify({ IdStudent: idStudent, IdSubject: idSubj, Semester: semester, NumberRating: rating, newPoints: points }),
			dataType: 'json',
		});
	}

	async function exportToExcel(selectedGroup, selectedSubject) {
		const ExcelJS = window.ExcelJS;

		var workbook = new ExcelJS.Workbook();
		var worksheet = workbook.addWorksheet('Sheet1');

		// Находим таблицу на сайте
		var table = document.getElementById('CuratorTable');

		// Получаем данные из HTML-таблицы
		var data = [];
		for (var i = 0; i < table.rows.length; i++) {
			var rowData = [];
			for (var j = 0; j < table.rows[i].cells.length; j++) {
				rowData.push(table.rows[i].cells[j].innerText.trim());
			}
			data.push(rowData);
		}

		// Заполняем ячейки в файле Excel данными из таблицы
		data.forEach((row, rowIndex) => {
			row.forEach((cell, cellIndex) => {
				if (rowIndex === 0) {
					// Устанавливаем стиль для шапки таблицы (первой строки) с содержащимся текстом
					const excelCell = worksheet.getCell(String.fromCharCode(65 + cellIndex) + (rowIndex + 1));
					excelCell.value = cell;
					if (cell.trim() !== "") {
						excelCell.fill = {
							type: 'pattern',
							pattern: 'solid',
							fgColor: { argb: 'FFC0C0C0' } // Серый цвет фона
						};
						excelCell.font = { bold: true };
					}
				} else {
					worksheet.getCell(String.fromCharCode(65 + cellIndex) + (rowIndex + 1)).value = cell;
				}
			});
		});

		// Автоматически устанавливаем ширину столбцов
		worksheet.columns.forEach(column => {
			let maxLength = 0;
			column.eachCell({ includeEmpty: true }, cell => {
				maxLength = Math.max(maxLength, (cell.value || '').toString().length);
			});
			column.width = maxLength + 2;
		});

		var Title = "Рейтинги " + selectedGroup + " " + selectedSubject + ".xlsx";
		// Скачиваем Excel файл
		const buffer = await workbook.xlsx.writeBuffer();
		saveAs(new Blob([buffer], { type: "application/octet-stream" }), Title);

	}

</script>