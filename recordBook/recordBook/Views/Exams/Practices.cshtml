@using System.Security.Claims;
@using recordBook.Models
@using recordBook.Models.ViewModels

@model ExamsViewModel
@{
	@if (User.IsInRole("Student"))
	{
		ViewData["Title"] = "Ваши практики, " + User.FindFirst(ClaimTypes.Surname)?.Value + " " + User.FindFirst(ClaimTypes.Name)?.Value;
	}
	else
	{
		ViewData["Title"] = "Практики группы " + Model.selectedGroup.Name_group;
	}
}

<h1>@ViewData["Title"]</h1>


@if (User.IsInRole("Adm"))
{
	<form asp-controller="Exams" asp-action="Practices">
		<select name="selectedGroup" required onchange="this.form.submit()" style="width:120px; height:40px; text-align:center">
			@foreach (var groups in Model.Groups)
			{
				if (groups.ID_Group == Model.selectedGroup.ID_Group)
				{
					<option value="@groups.ID_Group" selected>@groups.Name_group</option>
				}
				else
				{
					<option value="@groups.ID_Group">@groups.Name_group</option>
				}
			}
		</select>

		@{
			var subjectsWithPractice = Model.Group_Subjects
			.Where(q => q.ID_Group == Model.selectedGroup.ID_Group
			&& Model.Academic_Performances.Any(w => w.ID_Kind_of_work == 4 && w.ID_Subject == q.ID_Subject))
			.Select(q => q.ID_Subject)
			.Distinct();
		}


		<select name="selectedSubject" required onchange="this.form.submit()" style="width:200px; height:40px; text-align:center">
			@foreach (var subj in Model.Subjects.Where(s => subjectsWithPractice.Contains(s.ID_Subject)))
			{

				if (subj.ID_Subject == Model.selectedSubject.ID_Subject)
				{
					<option value="@subj.ID_Subject" selected>@subj.Name_subject</option>
				}
				else
				{
					<option value="@subj.ID_Subject">@subj.Name_subject</option>
				}

			}
		</select>

	</form>


	<table class="table" id="myTable" style="width:95%">

		<thead>
			<tr>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center;">Студент</h6>
				</th>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center; display:inline">Оценка</h6>
					<button type="button" id="ChangeGradeBtn" class="btn btn-warning">Изменить</button>
				</th>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center">Тип работы</h6>
				</th>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center">Дата сдачи</h6>
				</th>
			</tr>
		</thead>
		<tbody>

			@foreach (var r in Model.Academic_Performances
					.Where(q => q.ID_Kind_of_work == 4 && q.ID_Subject == Model.selectedSubject.ID_Subject))
			{
				bool groupCheck = Model.Students.Where(q => q.ID_Group == Model.selectedGroup.ID_Group).Any(q => q.ID_Student == r.ID_Student);

				if (groupCheck)
				{
					var student = Model.Students.FirstOrDefault(q => q.ID_Student == r.ID_Student);
					<tr id="columnGrade">
						<td style="text-align:center; font-weight: bold">
							<p id="label_s">@student.Surname  @student.Name  @student.Patronymic</p>
						</td>

						<td id="cellGrade" style="text-align:center;  padding-right:10%; font-weight: bold ">
							<p class="labelsGrade">@r.Grade</p>
							<select class="selectGrades" onchange="GradeIsChanged(@r.ID_Academic_performance,event)" style="width:200px; height:30px; text-align:center">
								<option value="Отлично">Отлично</option>
								<option value="Хорошо">Хорошо</option>
								<option value="Удовлетворительно">Удовлетворительно</option>
								<option value="Не удовлетворительно">Не удовлетворительно</option>
								<option value="-" selected>-</option>
							</select>
						</td>

						<td style="text-align:center;  font-weight: bold ">
							<p id="label_s"> @Model.Kind_of_works.Where(z => z.ID_Kind_of_work == @r.ID_Kind_of_work).Select(z => z.Title_of_kind).FirstOrDefault() </p>
						</td>
						<td style="text-align:center;  font-weight: bold ">
							<p id="label_s"> @r.Date?.ToString("dd MMMM yyyy") </p>
						</td>
					</tr>
				}
			}

		</tbody>
	</table>
}
else if (User.IsInRole("Student"))
{
	var subjectsWithPractice = Model.Group_Subjects
		.Where(q => q.ID_Group == Model.selectedGroup.ID_Group
		&& Model.Academic_Performances.Any(w => w.ID_Kind_of_work == 4 && w.ID_Subject == q.ID_Subject))
		.Select(q => q.ID_Subject)
		.Distinct();

	<table class="table" id="myTable" style="width:95%">

		<thead>
			<tr>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center;">Предмет</h6>
				</th>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center;">Оценка</h6>
				</th>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center">Тип работы</h6>
				</th>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center">Дата сдачи</h6>
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var subj in Model.Group_Subjects.Where(s=> subjectsWithPractice.Contains(s.ID_Subject)))
			{
				@foreach (var r in Model.Academic_Performances
						.Where(q => q.ID_Kind_of_work == 4 & q.ID_Subject == subj.ID_Subject))
				{
					var subjName = Model.Subjects.Where(q => q.ID_Subject == r.ID_Subject).Select(q => q.Name_subject).FirstOrDefault();
					<tr id="columnGrade">
						<td style="text-align:center; font-weight: bold">
							<p id="label_s">@subjName.ToString()</p>
						</td>

						<td id="cellGrade" style="text-align:center;  font-weight: bold ">
							<p class="labelsGrade">@r.Grade</p>
						</td>

						<td style="text-align:center;  font-weight: bold ">
							<p id="label_s"> @Model.Kind_of_works.Where(z => z.ID_Kind_of_work == @r.ID_Kind_of_work).Select(z => z.Title_of_kind).FirstOrDefault() </p>
						</td>
						<td style="text-align:center;  font-weight: bold ">
							<p id="label_s"> @r.Date?.ToString("dd MMMM yyyy") </p>
						</td>
					</tr>
				}
			}
		</tbody>
	</table>
}
else
{
	<form asp-controller="Exams" asp-action="Practices">
		<select name="selectedGroup" required onchange="this.form.submit()" style="width:120px; height:40px; text-align:center">
			@foreach (var groups in Model.Groups)
			{
				if (groups.ID_Group == Model.selectedGroup.ID_Group)
				{
					<option value="@groups.ID_Group" selected>@groups.Name_group</option>
				}
				else
				{
					<option value="@groups.ID_Group">@groups.Name_group</option>
				}
			}
		</select>
		@{
			var subjectsWithPractice = Model.Group_Subjects
			.Where(q => q.ID_Group == Model.selectedGroup.ID_Group
			&& Model.Academic_Performances.Any(w => w.ID_Kind_of_work == 4 && w.ID_Subject == q.ID_Subject))
			.Select(q => q.ID_Subject)
			.Distinct();
		}


		<select name="selectedSubject" required onchange="this.form.submit()" style="width:200px; height:40px; text-align:center">
			@foreach (var subj in Model.Subjects.Where(s => subjectsWithPractice.Contains(s.ID_Subject)))
			{

				if (subj.ID_Subject == Model.selectedSubject.ID_Subject)
				{
					<option value="@subj.ID_Subject" selected>@subj.Name_subject</option>
				}
				else
				{
					<option value="@subj.ID_Subject">@subj.Name_subject</option>
				}

			}
		</select>

	</form>


	<table class="table" id="CuratorTable" style="width:95%">

		<thead>
			<tr>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center;">Студент</h6>
				</th>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center; display:inline">Оценка</h6>
				</th>
				<th id="tableLabel">
					<h6 style="margin-bottom : 0px; text-align:center">Дата сдачи</h6>
				</th>
			</tr>
		</thead>
		<tbody>

			@foreach (var r in Model.Academic_Performances
					.Where(q => q.ID_Kind_of_work == 4 && q.ID_Subject == Model.selectedSubject.ID_Subject))
			{
				bool groupCheck = Model.Students.Where(q => q.ID_Group == Model.selectedGroup.ID_Group).Any(q => q.ID_Student == r.ID_Student);

				if (groupCheck)
				{
					var student = Model.Students.FirstOrDefault(q => q.ID_Student == r.ID_Student);
					<tr id="columnGrade">
						<td style="text-align:center; font-weight: bold">
							<p id="label_s">@student.Surname  @student.Name  @student.Patronymic</p>
						</td>

						<td id="cellGrade" style="text-align:center;  padding-right:10%; font-weight: bold ">
							<p class="labelsGrade">@r.Grade</p>
						</td>

						<td style="text-align:center;  font-weight: bold ">
							<p id="label_s"> @r.Date?.ToString("dd MMMM yyyy") </p>
						</td>
					</tr>
				}
			}

		</tbody>
	</table>
	<button id="exportButton" class="btn btn-info" onclick="exportToExcel()">Сохранить в Excel</button>
}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
<script type='text/javascript'>

	$(document).ready(function () {
		$('.selectGrades').hide();

	});

	$('#ChangeGradeBtn').click(function (id) {
		if ($('#ChangeGradeBtn').text() == 'Изменить') {
			$('.selectGrades').show();
			$('#ChangeGradeBtn').text('Сохранить');
		}
		else {
			$('.selectGrades').hide();
			$('#ChangeGradeBtn').text('Изменить');
			location.reload()
		}

	});

	function GradeIsChanged(id, event) {
		var grade = event.target.value;
		$.ajax({
			type: 'POST',
			url: '/Exams/ChangeGrades/',
			contentType: 'application/json',
			data: JSON.stringify({ id: id, newGrade: grade }),
			dataType: 'json',
		});
	};

	function exportToExcel() {
		var table = document.getElementById('CuratorTable');
		var ws = XLSX.utils.table_to_sheet(table, { sheet: "Sheet JS" });
		var wb = XLSX.utils.book_new();
		XLSX.utils.book_append_sheet(wb, ws, "Sheet1");

		// Экспортируем таблицу в xlsx
		var wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });
		function s2ab(s) {
			var buf = new ArrayBuffer(s.length);
			var view = new Uint8Array(buf);
			for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
			return buf;
		}

		var blob = new Blob([s2ab(wbout)], { type: 'application/octet-stream' });
		saveAs(blob, 'table_export.xlsx');
	}

</script>